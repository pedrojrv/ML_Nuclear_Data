Directory: optical/om-data/
File:      om-parameter-u.readme (Aug 18, 2008)
****************************************************

                    om-parameter-u.dat

              Optical model parameter library
           **************************************

Content
-------
Compilation of the Optical Model Potential parameters.
The library contains all potentials we have compiled, starting
form the users file of the RIPL-2 library. A table below 
summarizes its contents.

Format
------
[ALL INPUT PARAMETERS ARE READ IN FREE FORMAT READ STATEMENTS]

iref
author      [1 line of author names]
reference   [1 line of reference information]
summary     [4 lines of descriptive information]
emin,emax
izmin,izmax
iamin,iamax
imodel,izproj,iaproj,irel,idr

       *****LOOP: i=1,6
jrange(i)
       *****LOOP j=1,jrange
epot(i,j)
(rco(i,j,k), k=1,13)
(aco(i,j,k), k=1,13)
(pot(i,j,k), k=1,25)
       *****END i AND j LOOPS

jcoul
       *****LOOP j=1,jcoul
ecoul(j),rcoul0(j),rcoul(j),rcoul1(j),rcoul2(j),beta(j),acoul(j)
       *****END j LOOP
       
	   model 0: Spherical model
	   
    (1)*****SKIP TO (2)***** IF IMODEL NOT EQUAL TO 1
       model 1: RIGID ROTOR (ROTATIONAL MODEL) - Coupled-channels
nisotopes
       *****LOOP n=1,nisotopes
iz(n),ia(n),ncoll(n),lmax(n),idef(n),bandk(n),[def(j,n),
                                           j=2,idef(n),2]
       *****LOOP k=1,ncoll(n)
ex(k,n),spin(k,n),ipar(k,n)
       *****END k AND n LOOPS

    (2)*****SKIP TO (3)***** IF IMODEL NOT EQUAL TO 2
       model 2: HARMONIC OSCILLATOR (VIBRATIONAL MODEL) - Coupled-channels
nisotopes
       *****LOOP n=1,nisotopes
iz(n),ia(n),nvib(n)
       *****LOOP k=1,nvib(n)
exv(k,n),spinv(k,n),iparv(k,n),nph(k,n),defv(k,n),thetm(k,n)
       *****END k LOOP
       *****END n LOOP

    (3)*****SKIP REMAINING LINES IF IMODEL NOT EQUAL TO 3
       model 3: SOFT ROTOR (VIBRATIONAL-ROTATIONAL MODEL) - Coupled-channels 
nisotopes
       *****LOOP n=1,nisotopes
iz(n),ia(n),ncoll(n)
SR_hw(n),SR_amb0(n),SR_amg0(n),SR_gam0(n),SR_bet0(n),SR_bet4(n)  ! Hamiltonian parameters
SR_bb42(n),SR_gamg(n),SR_delg(n),SR_bet3(n),SR_et0(n),SR_amu0(n) ! Hamiltonian parameters
SR_hw0(n),SR_bb32(n),SR_gamde(n),SR_dpar(n),SR_gshape(n)         ! Hamiltonian parameters
       *****LOOP k=1,nvib(n)
exv(k,n),spinv(k,n),iparv(k,n),SR_ntu(k,n),SR_nnb(k,n),SR_nng(k,n),SR_nno(k,n)   
       *****END k LOOP
       *****END n LOOP

DEFINITIONS

      iref  = unique fixed point reference number for this
              potential
    author  = authors for this potential (up to 80 characters,
              1 line))
 reference  = reference for this potential (up to 80 characters,
              1 line)
    summary = short description of the potential (320 characters,
              4 lines)
 emin,emax  = minimum and maximum energies for validity of this
              potential
izmin,izmax = minimum and maximum Z values for this potential, where
              Z is the number of protons in the target nucleus.
iamin,iamax = minimum and maximum A values for this potential, where
              A = Z + N and N is the number of neutrons in the target.
    imodel  = 0 for spherical potential
            = 1 for coupled-channel, rotational model
            = 2 for vibrational model
            = 3 for non-axial deformed model
    izproj  = Z for incident projectile
    iaproj  = A for incident projectile
    irel    = 0 for non-relativistic parameterization
            = 1 for relativistic parameterization (relat. kinem. +
                reduced mass calculated from total relativistic energies)
    idr     = 0 dispersion relations not used
            = 1 dispersion relations with equivalent volume real
                potential used
            = 2 exact dispersion relations used. The dispersive integration
                is carried out analytically for commonly used Ws(E) and Wv(E).
                The dispersive integration is done in the om-retrieve code.
            = 3 idr=2 + The dispersive integration is carried out analytically
                for Wso(E) formfactor contributing to the real Vso.
                The dispersive integration is done in the om-retrieve code.
            =-2 exact dispersion relations used. The dispersive integration
                is carried out numerically for special Ws(E) and Wv(E).
                The dispersive integration is done in the om-retrieve code.
            =-3 idr=-2 +  The dispersive integration is carried out numerically
                for Wso(E) formfactor contributing to the real Vso.
                The dispersive integration is done in the om-retrieve code.

    index i = 1 real volume potential (Woods-Saxon)
            = 2 imaginary volume potential (Woods-Saxon)
            = 3 real surface derivative potential
            = 4 imaginary surface derivative potential
            = 5 real spin-orbit potential
            = 6 imaginary spin-orbit potential
    jrange  = number of energy ranges over which the potential is
              specified
            = positive for potential strengths
            = negative for volume integrals
            = 0 if potential of type i not used
  epot(i,j) = upper energy limit for jth energy range for
              potential i

  rco(i,j,k)= coefficients for multiplying A**(1/3) for
              specification of radius R in fm where:

if rco(i,j,13) = 0.0 ; default dependence
R(i,j) = { abs(rco(i,j,1)) + rco(i,j,3)*eta
             + rco(i,j,4)/A + rco(i,j,5)/sqrt(A)
             + rco(i,j,6)*A**(2./3.) + rco(i,j,7)*A
             + rco(i,j,8)*A**2  + rco(i,j,9)*A**3
             + rco(i,j,10)*A**(1./3.)
             + rco(i,j,11)*A**(-1./3.)
             + rco(i,j,2)*E
             + rco(i,j,12)*E*E
         } * [A**(1/3)]

if rco(i,j,13) .ne. 0 ; dispersive like energy dependence

R(i,j) = { abs(rco(i,j,1)) + rco(i,j,2)*A ) *
           ( 1.d0 - ( rco(i,j,3) + rco(i,j,4)*A ) * (E-EF)**nn /
           ( (E-EF)**nn + ( rco(i,j,5) + rco(i,j,6)*A )**nn ) )
         } * [A**(1/3)]
where
        nn = int(rco(i,j,7))
        EF     = Fermi energy in MeV
               = pot(i,j,18) + pot(i,j,19)*A

        If pot(i,j,18) and pot(i,j,19) = 0., then

        EF     = -0.5*[SN(Z,A) + SN(Z,A+1)]   (for incident neutrons)
               = -0.5*[SP(Z,A) + SP(Z+1,A+1)] (for incident protons)
        where

          SN(Z,A) = the neutron separation energy for nucleus (Z,A)
          SP(Z,A) = the proton separation energy for nucleus (Z,A).

if rco(4,j,1) >0.0: Woods-Saxon derivative surface potential
if rco(4,j,1) <0.0: Gaussian surface potential.

[Note that the A dependence of rco(i,j,11) cancels out so that
rco(i,j,11) is equivalent to adding a constant of that magnitude
to the radius R(i,j)].

 aco(i,j,k) = coefficients for specification of diffuseness a in
              fm where:

a(i,j) = abs(aco(i,j,1)) + aco(i,j,2)*E + aco(i,j,3)*eta
           + aco(i,j,4)/A + aco(i,j,5)/sqrt(A)
           + aco(i,j,6)*A**(2/3) + aco(i,j,7)*A
           + aco(i,j,8)*A**2 + aco(i,j,9)*A**3
           + aco(i,j,10)*A**(1/3) + aco(i,j,11)*A**(-1/3)
		   + aco(i,j,12)*E

 pot(i,j,k) = strength parameters in MeV given as follows:

if pot(i,j,k>21) .eq. 0, then    [standard form]

V(i,j) = pot(i,j,1) + pot(i,j,7)*eta + pot(i,j,8)*Ecoul1
       + pot(i,j,9)*A + pot(i,j,10)*A**(1/3)
       + pot(i,j,11)*A**(-2/3) + pot(i,j,12)*Ecoul2
       + [pot(i,j,2) + pot(i,j,13)*eta + pot(i,j,14)*A]*E
       + pot(i,j,3)*E*E + pot(i,j,4)*E*E*E + pot(i,j,6)*sqrt(E)
       + [pot(i,j,5) + pot(i,j,15)*eta + pot(i,j,16)*E]*ln(E)
       + pot(i,j,17)*Ecoul1/E**2

if pot(i,j,22) .ne. 0, then      [Smith form]

V(i,j) = pot(i,j,1) + pot(i,j,2)*eta
       + pot(i,j,3)*cos[2*pi*(A - pot(i,j,4))/pot(i,j,5)]
       + pot(i,j,6)*exp[pot(i,j,7)*E + pot(i,j,8)*E*E]
       + pot(i,j,9)*E*exp[pot(i,j,10)*E**pot(i,j,11)]

if pot(i,j,23) .ne. 0, then      [Varner form]

V(i,j) = [pot(i,j,1) + pot(i,j,2)*eta]/
       {1 + exp[(pot(i,j,3) - E + pot(i,j,4)*Ecoul2)/pot(i,j,5)]}
       + pot(i,j,6)*exp[(pot(i,j,7)*E - pot(i,j,8))/pot(i,j,6)]

if pot(i,j,24) .ne. 0, then      [extended Koning form]

   if b(i,j,11) = 0, then
     V(i,j) =  Vhf(E) + b(i,j,5)*VC
        + b(i,j,6)*((E-EF)**n(i,j)/((E-EF)**n(i,j) + b(i,j,7)**n(i,j)))
        + b(i,j,8)*exp(-b(i,j,9)*(E-EF)**b(i,j,12))*((E-EF)**n(i,j)/
        ((E-EF)**n(i,j) + b(i,j,10)**n(i,j)))

   if b(i,j,11) .ne. 0, then
     V(i,j) =  Vhf(E) + b(i,j,5)*VC
        + b(i,j,6)*((E-EF)**n(i,j)/((E-EF)**n(i,j) + b(i,j,7)**n(i,j)))
        + b(i,j,8)*exp(-b(i,j,9)*(E-EF))*((E-EF)**n(i,j)/
        ((E-EF)**n(i,j) + b(i,j,10)**n(i,j)))
        + b(i,j,11)*exp(-b(i,j,12)*(E-EF))

if (pot(i,j,24) .eq. 1) .or. (pot(i,j,24) .eq. 3), then [Koning form]

     Vhf(E) = b(i,j,1)*( b(i,j,15) - b(i,j,2)*(E-EF) + b(i,j,3)*(E-EF)**2
         - b(i,j,4)*(E-EF)**3 + b(i,j,13)*exp(-b(i,j,14)*(E-EF)) )
		 
if pot(i,j,24) .eq. 2, then [Morillon-Romain form]

     Vhf(E) is the solution of the implicit equation considering nonlocality (Morillon & Romain):
     Vhf(E) = b(i,j,1)*exp( -0.5*miu*(b(i,j,2)*]/hc)**2*[E-Vhf(E)]
                            + 4*(miu*b(i,j,3)*[E-Vhf(E)])**2/hc**4 )

     hc = (Plank constant * speed of light constant / (2*pi))
     miu is the reduced mass calculated from total energy as:
            miu = Etarget*Eproj / (Etarget+Eproj)

For cases where abs(idr) .ge. 2 :
     EP     = pot(i,j,20)   (for i = 2 or 4)
            = average energy of particle states. If pot(i,j,20)=0.,
              then use default value of EP=EF.
     EA     = pot(i,j,21)
            = energy above which nonlocality of the absorptive potential
              will be assumed. If pot(i,j,21)=0., then use default
              value of EA=1000. (MeV).

if( (pot(i,j,24).ne.0) and (Ea < 1000) and (E > (EF + EA)) ) then,
     V(2,j) = V(2,j) + AlphaV*(sqrt(E)+(EF+EA)**1.5/(2.*E)-1.5*sqrt(EF+EA))

where
     if( (pot(2,j,24).ne.0) and (Ea < 1000) then, AlphaV = pot(2,j,22) 
	 if  (pot(2,j,22).eq.0) AlphaV = 1.65 following Mahaux 1991
	 
     E      = Elab - pot(i,j,25)*Z/A**(1/3)
	 Elab   = projectile laboratory energy in MeV 
	 pot(i,j,25) is the estimated Coulomb shift used in Lane consistent potentials
	 
     eta    = (N-Z)/A
     Ecoul1 = 0.4Z/A**(1/3)
     Ecoul2 = 1.73*Z/RC
     VC     = b(i,j,1)*Ecoul2* ( b(i,j,2) - 2.*b(i,j,3)*(E-EF)
              + 3.*b(i,j,4)*(E-EF)**2 + b(i,j,14)*b(i,j,13)*exp(-b(i,j,14)*elf))

     EF     = Fermi energy in MeV
            = pot(i,j,18) + pot(i,j,19)*A
   
     If pot(i,j,18) and pot(i,j,19) = 0., then
     EF     = -0.5*[SN(Z,A) + SN(Z,A+1)]   (for incident neutrons)
            = -0.5*[SP(Z,A) + SP(Z+1,A+1)] (for incident protons)

where
    SN(Z,A) = the neutron separation energy for nucleus (Z,A)
    SP(Z,A) = the proton separation energy for nucleus (Z,A).

For pot(i,j,24).ne.0, the b(i,j,m) are defined as: [extended Koning form]

       b(i,j,m)  =  0 for i=1,6, j=1,jrange(i), m=1,12, except for
                    the following:
 
       b(1,j,1)  =  pot(1,j,1) + pot(1,j,2)*A + pot(1,j,8)*eta +
                  + pot(1,j,20)*eta/(pot(1,j,14) + pot(1,j,15)*A + pot(1,j,16))
     
	   b(1,j,2)  =  pot(1,j,3) + pot(1,j,4)*A 
       if pot(i,j,24) = 3, then 
	   b(1,j,2)  =  -(pot(1,j,3) + pot(1,j,4)*eta)/b(1,j,1) [Li - Cai form]

       b(1,j,3)  =  pot(1,j,5) + pot(1,j,6)*A
       b(1,j,4)  =  pot(1,j,7)
       b(1,j,5)  =  pot(1,j,9)
	   if pot(i,j,24) = 3, then b(1,j,5) = 0  [No Coulomb correction for Li & Cai proton OMP]
	   
       b(1,j,11) =  pot(1,j,10) + pot(1,j,11)*A
       b(1,j,12) =  pot(1,j,12)
       b(1,j,13) =  pot(1,j,16)
       b(1,j,14) =  pot(1,j,17)
       b(1,j,15) =  pot(1,j,14) + pot(1,j,15)*A
       if b(1,j,15)   = 0  then b(1,j,15) = 1 To preserve compatibility with Koning form
       if pot(i,j,24) = 3, then b(1,j,15) = 1 To preserve compatibility with Koning form
	   
       b(2,j,6)  =  pot(2,j,1) + pot(2,j,2)*A + pot(2,j,8)*eta
       b(2,j,7)  =  pot(2,j,3) + pot(2,j,4)*A + pot(2,j,9)*eta
       b(4,j,8)  =  pot(4,j,1) + pot(4,j,8)*eta + pot(4,j,7)*A + pot(4,j,9)*A**(-1/3)
       b(4,j,9)  =  pot(4,j,2) + pot(4,j,10)*A 
                  + pot(4,j,3)/(1. + exp((A-pot(4,j,4))/pot(4,j,5)))
       b(4,j,10) =  pot(4,j,6) + pot(4,j,11)*A
       b(4,j,12) =  pot(4,j,12)	   
	   
       b(5,j,11) =  pot(5,j,10) + pot(5,j,11)*A
       b(5,j,12) =  pot(5,j,12)
	   
       b(6,j,6)  =  pot(6,j,1)
       b(6,j,7)  =  pot(6,j,3)
       
	   n(i,j)    =  int(pot(i,j,13))

And, continuing the definitions:

    jcoul    = number of energy ranges for specifying coulomb
               radius and nonlocality range
   ecoul(j)  = maximum energy of coulomb energy range j
   rcoul0(j),rcoul(j),rcoul1(j),rcoul2(j),rcoul3(j)
             = coefficients to determine the coulomb radius, RC,
               from the expression
               RC = [rcoul0(j)*A**(-1/3) + rcoul(j) + rcoul1(j)*A**(-2/3) +
                     rcoul2(j)*A**(-5/3) + rcoul3(jc)*A] * A**(1/3)
   acoul(j)  = diffuseness in fm of the Wood-Saxon charge distribution.
    beta(j)  = nonlocality range.  Note that when beta(j).ne.0.,
               then the imaginary potential is pure derivative
               Woods-Saxon for energy range j
  nisotopes  = number of isotopes for which deformation parameters
               and discrete levels are given
     iz,ia   = Z and A of the target associated with the deformation
               parameters and discrete levels that follow
     ncoll   = number of collective states in the coupled-channel
               rotational model for this iz, ia
       lmax  = maximum l value for multipole expansion
       idef  = largest order of deformation
      bandk  = k for the rotational band
        def  = deformation parameters, l=2,4,6,...through lmax
         ex  = rotational level excitation energy (MeV)
       spin  = rotational level spin
       ipar  = rotational level parity (+1 or -1)
       nvib  = number of vibrational states in the model for this
               iz, ia (first level must be ground state)
        exv  = vibrational level excitation energy (MeV)
      spinv  = vibrational level spin
      iparv  = vibrational level parity (+1 or -1)
        nph  = 1 for pure 1-phonon state
             = 2 for pure 2-phonon state
       defv  = vibrational model deformation parameter
      thetm  = mixing parameter (degrees) for nph=3

	  Soft-rotor hamiltonian parameters for this iz and ia (used only by the OPTMAN code)
      SR_hw(n),SR_amb0(n),SR_amg0(n),SR_gam0(n),SR_bet0(n),SR_bet4(n)  ! Hamiltonian parameters
      SR_bb42(n),SR_gamg(n),SR_delg(n),SR_bet3(n),SR_et0(n),SR_amu0(n) ! Hamiltonian parameters
      SR_hw0(n),SR_bb32(n),SR_gamde(n),SR_dpar(n),SR_gshape(n)         ! Hamiltonian parameters

      Soft rotor quantum numbers for each vibrational-rotational level  (used only by the OPTMAN code)
      SR_ntu(k,n),SR_nnb(k,n),SR_nng(k,n),SR_nno(k,n)     
